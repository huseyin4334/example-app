services:
  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: example_user
      POSTGRES_PASSWORD: example_password
      POSTGRES_DB: example_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - route-planner-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U example_user -d example_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: route-planner-backend
    ports:
      - "8080:8080"
    depends_on:
      postgres: 
        condition: service_healthy
    networks:
      - route-planner-network

  # Frontend Angular Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: route-planner-frontend
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_started
    networks:
      - route-planner-network

# Networks
networks:
  route-planner-network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
    driver: local
